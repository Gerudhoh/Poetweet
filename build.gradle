plugins {
    id 'checkstyle'
    id 'org.springframework.boot' version '2.4.9'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'application'

group = 'poetweet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceCompatibility = 1.11
targetCompatibility = 1.11

project.webAppDirName = 'WebContent'

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    // TODO: Undo this
    // main.java.srcDirs = ['./src/tests/java/poetweet', './src/main/java/poetweet']
    // test.java.srcDirs = ['.']
}

dependencies {
    compile fileTree(dir: "WebContent/WEB-INF/lib", include: '*.jar')
    implementation('eu.crydee:syllable-counter:4.1.0')
    compile 'ca.rmen:rhymer:1.2.0'
    implementation('org.testng:testng:6.9.6')
    implementation('org.glassfish.jersey.core:jersey-client:3.0.2')
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:3.0.2'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:3.0.2'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation(
            'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-api:5.4.2'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.4.2',
            'org.junit.vintage:junit-vintage-engine:5.4.2'
    )
}

war {
    exclude 'WEB-INF/lib/**',
            'WEB-INF/classes/**'
}

test {

    exclude '**/DirectoryClearerTest.class', // Exclude this bc I don't want it to run all the time bc it deletes files
            '**/ClearResourcesAdminOptionTest.class', // TODO: Add this back
            '**/ClearResourcesAdminOptionTest.class', // Exclude this bc I don't want it to run all the time bc it deletes files
            '**/ClearSavedPoemsAdminOptionTest.class', // Exclude this bc I don't want it to run all the time bc it deletes files
            '**/TwitterScraperTest.class'    // Exclude this bc it needs the machine to have tweepy installed

    testLogging {
        showStandardStreams = true
    }
}

checkstyle {
    toolVersion = "8.26"
}

// Main main for Poetweet to make the poems
task(runPoetweet, dependsOn: 'classes', type: JavaExec) {
    main = "poetweet.Poetweet"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

// Main for Poetweet Admin to do behind the scenes stuff
task(runPoetweetAdmin, dependsOn: 'classes', type: JavaExec) {
    main = "poetweet.PoetweetAdmin"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

